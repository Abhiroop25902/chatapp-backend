spring.application.name=ChatBackend
server.port=${PORT:8080}
logging.level.root=ERROR
#  Basic DataSource settings
spring.datasource.url=jdbc:sqlserver://chatapp25902.database.windows.net:1433;database=azureSqlDb;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;authentication=ActiveDirectoryPassword
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.ddl-auto=update
#ratelimiter
resilience4j.ratelimiter.instances.registerRateLimiter.limit-for-period=5
resilience4j.ratelimiter.instances.registerRateLimiter.limit-refresh-period=10s
resilience4j.ratelimiter.instances.registerRateLimiter.timeout-duration=2s
resilience4j.ratelimiter.instances.loginRateLimiter.limit-for-period=5
resilience4j.ratelimiter.instances.loginRateLimiter.limit-refresh-period=10s
resilience4j.ratelimiter.instances.loginRateLimiter.timeout-duration=2s
#jwt
jwt.secret=${SECRET}
jwt.expiration=86400000
#hikari setup
spring.datasource.hikari.maximum-pool-size=10
# Allow pool to shrink completely to let azure stop db and save money
spring.datasource.hikari.minimum-idle=0
# Keep idle connections alive only for 5 minutes
spring.datasource.hikari.idle-timeout=300000
# Fail fast if DB is paused and no connection is available in 10s
spring.datasource.hikari.connection-timeout=10000
# Prevent Hikari from using stale connections (Azure may kill idle ones silently)
spring.datasource.hikari.max-lifetime=1500000


